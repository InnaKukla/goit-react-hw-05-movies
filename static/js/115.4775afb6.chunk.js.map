{"version":3,"file":"static/js/115.4775afb6.chunk.js","mappings":"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","sources":["components/Movies/Movies.jsx","components/Movies/Movies.styled.js","services/apiMovies.jsx","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/index.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js"],"sourcesContent":["import PropTypes from 'prop-types';\nimport { useEffect, useState } from 'react';\nimport { Link, useSearchParams } from 'react-router-dom';\n\nimport { fetchSearchMovies } from 'services/apiMovies';\nimport notImg from 'img/notFoto.png';\nimport {\n  MovieForm,\n  MovieImg,\n  MovieInfo,\n  MovieItem,\n  MoviesList,\n  MovieTitle,\n} from './Movies.styled';\n\nconst Movies = () => {\n  const [searchFilms, setSearchFilms] = useState([]);\n  const [query, setQuery] = useState('');\n  // eslint-disable-next-line no-unused-vars\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const handlerButton = e => {\n    e.preventDefault();\n\n    setQuery(e.target.name.value);\n    setSearchParams({ query: e.target.name.value.trim().toLowerCase() });\n  };\n\n  useEffect(() => {\n    fetchSearchMovies(query).then(response => {\n      setSearchFilms(response.results);\n    });\n  }, [query]);\n  return (\n    <>\n      <MovieForm onSubmit={handlerButton}>\n        <input type=\"text\" name=\"name\" autoComplete=\"off\" />\n        <button type=\"submit\">Search</button>\n      </MovieForm>\n\n      <MoviesList>\n        {searchFilms.map(\n          ({\n            id,\n            original_title,\n            poster_path,\n            title,\n            release_date,\n            vote_count,\n          }) => (\n            <MovieItem key={id}>\n              <Link to={`/movies/${id}`}>\n                <MovieImg\n                  src={\n                    poster_path\n                      ? `https://image.tmdb.org/t/p/w500/${poster_path}`\n                      : notImg\n                  }\n                  alt={title}\n                />\n                <MovieTitle>{original_title}</MovieTitle>\n                <MovieInfo>\n                  <p>\n                    Release Date: <span> {release_date.split('-')[0]}</span>{' '}\n                  </p>\n                  <p>\n                    Vote count: <span> {vote_count}</span>{' '}\n                  </p>\n                </MovieInfo>\n              </Link>\n            </MovieItem>\n          )\n        )}\n      </MoviesList>\n    </>\n  );\n};\n\nexport default Movies;\n\nMovies.propTypes = {\n  handlerButton: PropTypes.func.isRequired,\n  searchFilms: PropTypes.arrayOf({\n    id: PropTypes.number.isRequired,\n    original_title: PropTypes.string.isRequired,\n    poster_path: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    release_date: PropTypes.string.isRequired,\n    vote_count: PropTypes.number.isRequired,\n  }),\n};\n","import styled from 'styled-components';\n\nexport const MovieForm = styled.form`\n  margin-top: 20px;\n  margin-left: 30px;\n\n  input {\n    width: 800px;\n    height: 20px;\n    line-height: 46px;\n    font-size: 1.1em;\n    color: rgba(0, 0, 0, 0.5);\n    border-radius: 30px;\n    padding: 10px 20px;\n    border: 1px solid black;\n    :active,\n    :hover,\n    :focus {\n      border: 0.5px solid #1f75fe;\n      box-shadow: 0px 0px 5px 0px #1f75fe;\n      outline: none;\n    }\n  }\n\n  button {\n    display: inline-flex;\n    justify-content: center;\n    align-content: center;\n    align-items: center;\n    height: 44px;\n    padding: 10px 26px;\n    border: none;\n    background-color: cyan;\n    border-radius: 30px;\n    font-size: 20px;\n    color: #fff;\n    :hover {\n      transform: scale(1.1);\n    }\n  }\n`;\n\nexport const MoviesList = styled.ul`\n  display: grid;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\n  grid-gap: 16px;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding: 0;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n  /* padding: 20px 20px 40px 20px; */\n  margin: 0;\n\n  @media screen and (min-width: 768px) {\n    max-width: 768px;\n    //   display: flex;\n    //   flex-wrap: wrap;\n    margin-right: auto;\n    margin-left: auto;\n    gap: 32px;\n    padding: 30px 25px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    max-width: 1280px;\n    gap: 0;\n  }\n`;\nexport const MovieItem = styled.li`\n  margin-left: auto;\n  margin-right: auto;\n  max-width: 280px;\n  list-style: none;\n  margin-bottom: 20px;\n  border-radius: 2px;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover,\n  &:focus {\n    transform: scale(1.02);\n    outline: none;\n  }\n\n  &:last-child {\n    margin-bottom: 0;\n  }\n\n  @media screen and (min-width: 768px) {\n    max-width: 768px;\n    margin: 0;\n  }\n\n  @media screen and (min-width: 1280px) {\n    max-width: 1280px;\n    margin-right: 16px;\n    margin-bottom: 32px;\n\n    &:nth-child(3n) {\n      margin-right: 0;\n    }\n\n    &:nth-last-child(-n + 3) {\n      margin-bottom: 0;\n    }\n  }\n\n  a {\n    text-decoration: none;\n    color: black;\n  }\n`;\n\nexport const MovieImg = styled.img`\n  display: block;\n  width: 280px;\n  height: 402px;\n  border-radius: 5px;\n\n  @media screen and (min-width: 768px) {\n    width: 100%;\n    height: 455px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    width: 100%;\n    height: 574px;\n  }\n`;\n\nexport const MovieTitle = styled.h2`\n  margin-left: 20px;\n`;\n\nexport const MovieInfo = styled.div`\n  margin-left: 20px;\n`;\n\n// -------------Home Page------------\nexport const HomeTitle = styled.h2`\n  text-align: center;\n  font-size: 3.2rem;\n  word-spacing: 0.6rem;\n  margin: 0 0 10px 0;\n`;\n","import PropTypes from 'prop-types';\nconst apiKey = '6804a755b6d8ca39f57235b79af1d744';\nconst baseUrl = 'https://api.themoviedb.org/3';\nconst popularMovie = '/discover/movie?sort_by=popularity.desc';\n\nexport const fetchPopularMovies = () => {\n  return fetch(`${baseUrl}${popularMovie}&api_key=${apiKey}`).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n    return Promise.reject(new Error(`Any movies didn't find`));\n  });\n};\n\nexport const fetchSearchMovies = query => {\n  return fetch(\n    `${baseUrl}/search/movie?api_key=${apiKey}&language=en-US&query=${query}&page=1&include_adult=false`\n  ).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n    return Promise.reject(new Error(`Any movies didn't find`));\n  });\n};\n\nexport const fetchMoviesById = movieId => {\n  return fetch(\n    `${baseUrl}/movie/${movieId}?api_key=${apiKey}&language=en-US&page=1&include_adult=false`\n  ).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n    return Promise.reject(new Error(`Any movies didn't find`));\n  });\n};\n\nexport const fetchMoviesCredits = movie_id => {\n  return fetch(\n    `${baseUrl}/movie/${movie_id}/credits?api_key=${apiKey}&language=en-US&page=1&include_adult=false`\n  ).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n    return Promise.reject(new Error(`Any movies didn't find`));\n  });\n};\n\nexport const fetchMovieReviews = movie_id => {\n  return fetch(\n    `${baseUrl}/movie/${movie_id}/reviews?api_key=${apiKey}&language=en-US&page=1&include_adult=false`\n  ).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n    return Promise.reject(new Error(`Any movies didn't find`));\n  });\n};\n\nfetchPopularMovies.propTypes = {\n  popularMovie: PropTypes.string.isRequired,\n  response: PropTypes.array.isRequired,\n};\n\nfetchSearchMovies.propTypes = {\n  query: PropTypes.string.isRequired,\n  response: PropTypes.array.isRequired,\n};\n\nfetchMoviesById.propTypes = {\n  movieId: PropTypes.number.isRequired,\n  response: PropTypes.array.isRequired,\n};\nfetchMoviesCredits.propTypes = {\n  movieId: PropTypes.number.isRequired,\n  response: PropTypes.array.isRequired,\n};\nfetchMovieReviews.propTypes = {\n  movieId: PropTypes.number.isRequired,\n  response: PropTypes.array.isRequired,\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n"],"names":["useState","searchFilms","setSearchFilms","query","setQuery","useSearchParams","setSearchParams","useEffect","fetchSearchMovies","then","response","results","onSubmit","e","preventDefault","target","name","value","trim","toLowerCase","type","autoComplete","map","id","original_title","poster_path","title","release_date","vote_count","to","src","notImg","alt","split","MovieForm","styled","MoviesList","MovieItem","MovieImg","MovieTitle","MovieInfo","HomeTitle","apiKey","baseUrl","fetchPopularMovies","fetch","ok","json","Promise","reject","Error","fetchMoviesById","movieId","fetchMoviesCredits","movie_id","fetchMovieReviews","propTypes","popularMovie","PropTypes","ReactPropTypesSecret","require","emptyFunction","emptyFunctionWithReset","resetWarningCache","module","exports","shim","props","propName","componentName","location","propFullName","secret","err","getShim","isRequired","ReactPropTypes","array","bigint","bool","func","number","object","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes"],"sourceRoot":""}