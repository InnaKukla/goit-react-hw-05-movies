{"version":3,"file":"static/js/387.bec009d3.chunk.js","mappings":"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","sources":["components/Cast/Cast.styled.js","components/Cast/Cast.jsx","services/apiMovies.jsx","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/index.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const CastList = styled.ul`\n  display: grid;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\n  grid-gap: 16px;\n  margin-top: 20px;\n  margin-bottom: 0;\n  padding: 0;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n  margin: 0;\n\n  @media screen and (min-width: 768px) {\n    max-width: 768px;\n    margin-right: auto;\n    margin-left: auto;\n    gap: 32px;\n    padding: 30px 25px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    max-width: 1280px;\n    gap: 0;\n  }\n`;\nexport const CastItem = styled.li`\n  display: flex;\n  list-style: none;\n  margin-bottom: 20px;\n  border-radius: 2px;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover,\n  &:focus {\n    transform: scale(1.02);\n    outline: none;\n  }\n\n  @media screen and (min-width: 1280px) {\n    &:not(:last-child) {\n      margin-right: 16px;\n    }\n  }\n\n  a {\n    text-decoration: none;\n    color: black;\n  }\n`;\n\nexport const CastImg = styled.img`\n  display: block;\n  margin-right: 10px;\n  width: 150px;\n  height: 220px;\n  border-radius: 5px;\n\n  @media screen and (min-width: 768px) {\n    width: 150px;\n    height: 220px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    width: 150px;\n    max-height: 220px;\n  }\n`;\n\nexport const CastName = styled.p`\n  font-size: 25px;\n  font-weight: 200;\n`;\n\nexport const CastCharacter = styled.p`\n  font-size: 20px;\n`;\n\nexport const CastCharacterInfo = styled.span`\n  font-size: 15px;\n`;\n\nexport const CastInfo = styled.div`\n  align-self: center;\n`;\n","// eslint-disable-next-line no-unused-vars\nimport PropTypes from 'prop-types';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { fetchMoviesCredits } from 'services/apiMovies';\nimport {\n  CastCharacter,\n  CastCharacterInfo,\n  CastImg,\n  CastInfo,\n  CastItem,\n  CastList,\n  CastName,\n} from './Cast.styled';\nimport notImg from 'img/imageNotFound.png';\n\nconst Cast = () => {\n  const params = useParams();\n  const { movieId } = params;\n  const [credits, setCredits] = useState([]);\n\n  useEffect(() => {\n    fetchMoviesCredits(movieId).then(response => {\n      setCredits(response.cast);\n    });\n  }, [movieId]);\n\n  return (\n    <div>\n      <CastList>\n        {credits.map(({ profile_path, name, original_name, character }) => (\n          <CastItem>\n            <CastImg\n              src={\n                profile_path\n                  ? `https://image.tmdb.org/t/p/w500/${profile_path}`\n                  : notImg\n              }\n              alt={`${name}`}\n            />\n            <CastInfo>\n              <CastName>{original_name}</CastName>\n              <CastCharacter>\n                Character: <CastCharacterInfo>{character}</CastCharacterInfo>\n              </CastCharacter>\n            </CastInfo>\n          </CastItem>\n        ))}\n      </CastList>\n    </div>\n  );\n};\n\nexport default Cast;\n\nCast.propTypes = {\n  profile_path: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  original_name: PropTypes.string.isRequired,\n  character: PropTypes.string.isRequired,\n  movieId: PropTypes.number.isRequired,\n  response: PropTypes.array.isRequired,\n};\n","import PropTypes from 'prop-types';\nconst apiKey = '6804a755b6d8ca39f57235b79af1d744';\nconst baseUrl = 'https://api.themoviedb.org/3';\nconst popularMovie = '/discover/movie?sort_by=popularity.desc';\n\nexport const fetchPopularMovies = () => {\n  return fetch(`${baseUrl}${popularMovie}&api_key=${apiKey}`).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n    return Promise.reject(new Error(`Any movies didn't find`));\n  });\n};\n\nexport const fetchSearchMovies = query => {\n  return fetch(\n    `${baseUrl}/search/movie?api_key=${apiKey}&language=en-US&query=${query}&page=1&include_adult=false`\n  ).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n    return Promise.reject(new Error(`Any movies didn't find`));\n  });\n};\n\nexport const fetchMoviesById = movieId => {\n  return fetch(\n    `${baseUrl}/movie/${movieId}?api_key=${apiKey}&language=en-US&page=1&include_adult=false`\n  ).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n    return Promise.reject(new Error(`Any movies didn't find`));\n  });\n};\n\nexport const fetchMoviesCredits = movie_id => {\n  return fetch(\n    `${baseUrl}/movie/${movie_id}/credits?api_key=${apiKey}&language=en-US&page=1&include_adult=false`\n  ).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n    return Promise.reject(new Error(`Any movies didn't find`));\n  });\n};\n\nexport const fetchMovieReviews = movie_id => {\n  return fetch(\n    `${baseUrl}/movie/${movie_id}/reviews?api_key=${apiKey}&language=en-US&page=1&include_adult=false`\n  ).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n    return Promise.reject(new Error(`Any movies didn't find`));\n  });\n};\n\nfetchPopularMovies.propTypes = {\n  popularMovie: PropTypes.string.isRequired,\n  response: PropTypes.array.isRequired,\n};\n\nfetchSearchMovies.propTypes = {\n  query: PropTypes.string.isRequired,\n  response: PropTypes.array.isRequired,\n};\n\nfetchMoviesById.propTypes = {\n  movieId: PropTypes.number.isRequired,\n  response: PropTypes.array.isRequired,\n};\nfetchMoviesCredits.propTypes = {\n  movieId: PropTypes.number.isRequired,\n  response: PropTypes.array.isRequired,\n};\nfetchMovieReviews.propTypes = {\n  movieId: PropTypes.number.isRequired,\n  response: PropTypes.array.isRequired,\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n"],"names":["CastList","styled","CastItem","CastImg","CastName","CastCharacter","CastCharacterInfo","CastInfo","movieId","useParams","useState","credits","setCredits","useEffect","fetchMoviesCredits","then","response","cast","map","profile_path","name","original_name","character","src","notImg","alt","apiKey","baseUrl","fetchPopularMovies","fetch","ok","json","Promise","reject","Error","fetchSearchMovies","query","fetchMoviesById","movie_id","fetchMovieReviews","propTypes","popularMovie","PropTypes","ReactPropTypesSecret","require","emptyFunction","emptyFunctionWithReset","resetWarningCache","module","exports","shim","props","propName","componentName","location","propFullName","secret","err","getShim","isRequired","ReactPropTypes","array","bigint","bool","func","number","object","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes"],"sourceRoot":""}